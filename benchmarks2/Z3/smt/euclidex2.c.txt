; benchmark generated from python API
(set-info :status unknown)
(declare-fun _a_9_ () Real)
(declare-fun _a_8_ () Real)
(declare-fun _a_7_ () Real)
(declare-fun _a_6_ () Real)
(declare-fun _a_5_ () Real)
(declare-fun _a_4_ () Real)
(declare-fun _a_3_ () Real)
(declare-fun _a_2_ () Real)
(declare-fun _a_1_ () Real)
(declare-fun _a_14_ () Real)
(declare-fun _a_13_ () Real)
(declare-fun _a_12_ () Real)
(declare-fun _a_11_ () Real)
(declare-fun _a_10_ () Real)
(declare-fun _a_0_ () Real)
(assert
 (forall ((r_0 Real) (p_0 Real) (a_0 Real) (q_0 Real) (y_0 Real) (s_0 Real) (b_0 Real) (x_0 Real) )(let ((?x201 (* (* _a_9_ q_0) x_0)))
 (let ((?x204 (* _a_8_ q_0)))
 (let ((?x205 (* _a_8_ p_0)))
 (let ((?x207 (* (* _a_7_ s_0) y_0)))
 (let ((?x211 (* (* _a_6_ s_0) x_0)))
 (let ((?x215 (* _a_5_ (^ y_0 2.0))))
 (let ((?x217 (* (* _a_4_ q_0) y_0)))
 (let ((?x221 (* _a_3_ (^ x_0 2.0))))
 (let ((?x223 (* _a_2_ (^ q_0 2.0))))
 (let ((?x227 (* _a_2_ (^ p_0 2.0))))
 (let ((?x228 (* _a_1_ x_0)))
 (let ((?x229 (* _a_14_ q_0)))
 (let ((?x230 (* ?x229 s_0)))
 (let ((?x236 (* _a_13_ (^ s_0 2.0))))
 (let ((?x240 (* _a_13_ (^ r_0 2.0))))
 (let ((?x241 (* _a_12_ y_0)))
 (let ((?x242 (* _a_11_ s_0)))
 (let ((?x248 (- (+ (- (- _a_0_) (* (* _a_10_ x_0) y_0)) (* _a_11_ r_0)) ?x242)))
 (let ((?x252 (- (+ (- (- ?x248 ?x241) ?x240) (* (* (* 2.0 _a_13_) r_0) s_0)) ?x236)))
 (let ((?x255 (+ (+ (- ?x252 (* (* _a_14_ p_0) r_0)) (* (* _a_14_ p_0) s_0)) (* ?x229 r_0))))
 (let ((?x259 (+ (- (- (- ?x255 ?x230) ?x228) ?x227) (* (* (* 2.0 _a_2_) p_0) q_0))))
 (let ((?x264 (- (- (+ (- (- ?x259 ?x223) ?x221) (* (* _a_4_ p_0) y_0)) ?x217) ?x215)))
 (let ((?x267 (+ (- (+ ?x264 (* (* _a_6_ r_0) x_0)) ?x211) (* (* _a_7_ r_0) y_0))))
 (let ((?x272 (- (+ (- (+ (- ?x267 ?x207) ?x205) ?x204) (* (* _a_9_ p_0) x_0)) ?x201)))
 (let ((?x282 (- (- (- (- (- _a_0_) (* (* _a_10_ x_0) y_0)) ?x242) ?x241) ?x236)))
 (let ((?x289 (- (- (- (- (- (- (- ?x282 ?x230) ?x228) ?x223) ?x221) ?x217) ?x215) ?x211)))
 (let (($x294 (>= (+ (- (- (- ?x289 ?x207) ?x204) ?x201) b_0) 0.0)))
 (let (($x299 (>= (- (- a_0 (* p_0 x_0)) (* r_0 y_0)) 0.0)))
 (let (($x302 (>= (+ (+ (- a_0) (* p_0 x_0)) (* r_0 y_0)) 0.0)))
 (let (($x303 (and $x302 $x299 $x294 true (>= (+ (- a_0) b_0) 0.0))))
 (let (($x312 (and $x302 $x299 $x294 true (>= (- a_0 b_0) 0.0))))
 (let ((?x314 (* s_0 y_0)))
 (let ((?x295 (* r_0 y_0)))
 (let ((?x319 (+ (- (+ (- (- a_0 b_0) (* p_0 x_0)) (* q_0 x_0)) ?x295) ?x314)))
 (let ((?x326 (- (+ (- (+ (+ (- a_0) b_0) (* p_0 x_0)) (* q_0 x_0)) ?x295) ?x314)))
 (let ((?x41 (* 1.0 _a_13_)))
 (let ((?x335 (- (- (- (- _a_0_) (* (* _a_10_ x_0) y_0)) (* 1.0 _a_11_)) ?x41)))
 (let ((?x338 (+ (- (- ?x335 ?x221) ?x215) (* x_0 (- (- _a_1_) (* 1.0 _a_6_))))))
 (let (($x340 (>= (+ ?x338 (* y_0 (+ (- (- _a_12_) (* 1.0 _a_7_)) 1.0))) 0.0)))
 (let (($x344 (and (>= x_0 0.0) (>= y_0 0.0))))
 (let (($x32 (and true)))
 (let (($x346 (=> $x344 $x32)))
 (and $x346 $x346 (=> $x344 (and $x340)) (=> (and $x302 $x299 $x294 false) $x32) (=> $x312 (and (>= ?x326 0.0))) (=> $x312 (and (>= ?x319 0.0))) (=> $x312 (and $x294)) (=> $x303 (and $x302)) (=> $x303 (and $x299)) (=> $x303 (and (>= (+ (- ?x272 a_0) b_0) 0.0)))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)

